c
@post
n
c
params[:id]
c
n
nb
c
n
c
@post.delete
n
c
@post.delete
n
c
n
c
@post.delete
n
cn
c
@post.delete
n
c
@post.delete
n
c
@post.delete
@post.delete!
n
c
n
@post
n
c
Post.find_by(id: params[:id])
c
n
c
params
post_params
c
n
c
@comment.update!(comment_params)
Comment
@comment.update!
comment_params
@comment.update!
n
c
comment_params
c
comment_params
c
comment_params
@comment.update!
n
c
Comment
comment_params
@comment.update!
@comment
n
c
n
@like
n
c
Like.find_by(like_params)
Like.find_by(user_id: 4,  likable_id: 8, likable_type: "Post")
Like.where(user_id: 4,  likable_id: 8, likable_type: "Post")
Like.where(user_id: 4)
Like.where(user_id: 4, emote_id: 6, likable_id: 8, likable_type: "Post")
Like.find_by(user_id: 4, emote_id: 6, likable_id: 8, likable_type: "Post")
like_params
c
Like.all
Like.find_by(id: params[:id])
@like
n
params[:id]
c
params
comment_params
post_params
c
Like.create!(like_params)
like_params
c
n
c
n
c
comment.user.first_name
c
comment
comment.user
c
@top_three
c
@top_three = (ordered_top_likes.sort_by { |emote_id, count| -count }.to_h).keys[0..2]
@top_three.keys[0..2]
n
c
b = a.keys[0] + a.keys[1]
a = @ordered_top_likes.sort_by { |emote_id, count| -count }.to_h
@ordered_top_likes.sort_by { |emote_id, count| count }
n
c
@ordered_top_likes
c
@ordered_top_likes
n
c
n
c
n
n\
Like.select("COUNT(likes.emote_id)").group([:emote_id, :likable_type, :likable_id])
c
Like.group([:likable_type, :likable_id, :emote_id])
Like.all.group(:emote_id)
<<SQL
SQL
Like.group
Like.group([:likable_type, :likable_id, :emote_id]).
Like.select("TOP 3 likes, count(*))
Like.group([:likable_id, :likable_type])
Like.all.group(:likable_id)
Like.includes(
c
@ordered_likes
c
n
c
n
c
cc
c
@likes.last.likable_id
@likes.first.likable_id
@likes.last.likable_id
c
like
c
like
c
n
@likes.length
n
c
n
@likes
n
c
Like.where(likable_id: like_params[:likable_id], likable_type: like_params[:likable_type])
Like
like_params
Like.where(likable_id: like_params[:likable_id], likable_type: like_params[:likable_type])
@likes
c
n
c
quit
Like.where(user_id: like_params[:user_id], likable_id: like_params[:likable_id], likable_type: like_params[:likable_type]).first
Like.where(user_id: like_params[:user_id], likable_id: like_params[:likable_id], likable_type: like_params[:likable_type])
like_params
c
@like
n
c
like_params
Like.where(user_id: 4, likable_id: 8, likable_type: 'Post')
Like.where(user_id: 4)
like_params
c
@like
n
c
like_params
Like.create!(like_params)
Like.create(like_params)
c
n
c
like_params
c
like_params
c
like_params
c
like_params
c
like_params
c
like_params
c
like_params
c
n
c
n
c
post
c
post.likes.each { |like| puts like.id }
post.likes.each { |like| puts like }
post.likes
c
post.likes
post
c
n
post.likes
post
c
post
c
post.likes
post
c
post.likes
c
post
c
post.likes
post
c
post
c
post
c
post.likes
post
c
post.likes
post
c
post.likes
post
c
post
c
@posts.last.likes.first
@posts.last.likes
@posts.last
@posts
@posts.first.likes
@posts.first
@posts
@post
c
post.likes.first
